import socket

HEADER: int = 16
FORMAT: str = 'ansi'


class Network:
    def __init__(self, conn: socket.socket):
        self.conn = conn

    def recv(self) -> str:
        return self.recv_bytes().decode(FORMAT)

    def recv_bytes(self) -> bytes:
        msg_length: str = self.conn.recv(HEADER).decode(FORMAT)
        if msg_length:
            msg_length: int = int(msg_length)
            msg: bytes = self.conn.recv(msg_length)
            return msg

    def send(self, msg: str) -> None:
        message: bytes = msg.encode(FORMAT)
        self.send_bytes(message)

    def send_bytes(self, msg: bytes) -> None:
        msg_length: int = len(msg)
        send_length: bytes = str(msg_length).encode(FORMAT)
        send_length += b" " * (HEADER - len(send_length))
        self.conn.send(send_length)
        self.conn.send(msg)

    def close_conn(self):
        self.conn.close()
